# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from lndgrpc.compiled import universe_pb2 as lndgrpc_dot_compiled_dot_universe__pb2


class UniverseStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.MultiverseRoot = channel.unary_unary(
                '/universerpc.Universe/MultiverseRoot',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.MultiverseRootRequest.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.MultiverseRootResponse.FromString,
                )
        self.AssetRoots = channel.unary_unary(
                '/universerpc.Universe/AssetRoots',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.AssetRootRequest.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.AssetRootResponse.FromString,
                )
        self.QueryAssetRoots = channel.unary_unary(
                '/universerpc.Universe/QueryAssetRoots',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.AssetRootQuery.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.QueryRootResponse.FromString,
                )
        self.DeleteAssetRoot = channel.unary_unary(
                '/universerpc.Universe/DeleteAssetRoot',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.DeleteRootQuery.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.DeleteRootResponse.FromString,
                )
        self.AssetLeafKeys = channel.unary_unary(
                '/universerpc.Universe/AssetLeafKeys',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.AssetLeafKeysRequest.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.AssetLeafKeyResponse.FromString,
                )
        self.AssetLeaves = channel.unary_unary(
                '/universerpc.Universe/AssetLeaves',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.ID.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.AssetLeafResponse.FromString,
                )
        self.QueryProof = channel.unary_unary(
                '/universerpc.Universe/QueryProof',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.UniverseKey.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.AssetProofResponse.FromString,
                )
        self.InsertProof = channel.unary_unary(
                '/universerpc.Universe/InsertProof',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.AssetProof.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.AssetProofResponse.FromString,
                )
        self.PushProof = channel.unary_unary(
                '/universerpc.Universe/PushProof',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.PushProofRequest.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.PushProofResponse.FromString,
                )
        self.Info = channel.unary_unary(
                '/universerpc.Universe/Info',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.InfoRequest.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.InfoResponse.FromString,
                )
        self.SyncUniverse = channel.unary_unary(
                '/universerpc.Universe/SyncUniverse',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.SyncRequest.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.SyncResponse.FromString,
                )
        self.ListFederationServers = channel.unary_unary(
                '/universerpc.Universe/ListFederationServers',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.ListFederationServersRequest.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.ListFederationServersResponse.FromString,
                )
        self.AddFederationServer = channel.unary_unary(
                '/universerpc.Universe/AddFederationServer',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.AddFederationServerRequest.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.AddFederationServerResponse.FromString,
                )
        self.DeleteFederationServer = channel.unary_unary(
                '/universerpc.Universe/DeleteFederationServer',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.DeleteFederationServerRequest.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.DeleteFederationServerResponse.FromString,
                )
        self.UniverseStats = channel.unary_unary(
                '/universerpc.Universe/UniverseStats',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.StatsRequest.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.StatsResponse.FromString,
                )
        self.QueryAssetStats = channel.unary_unary(
                '/universerpc.Universe/QueryAssetStats',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.AssetStatsQuery.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.UniverseAssetStats.FromString,
                )
        self.QueryEvents = channel.unary_unary(
                '/universerpc.Universe/QueryEvents',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.QueryEventsRequest.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.QueryEventsResponse.FromString,
                )
        self.SetFederationSyncConfig = channel.unary_unary(
                '/universerpc.Universe/SetFederationSyncConfig',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.SetFederationSyncConfigRequest.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.SetFederationSyncConfigResponse.FromString,
                )
        self.QueryFederationSyncConfig = channel.unary_unary(
                '/universerpc.Universe/QueryFederationSyncConfig',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.QueryFederationSyncConfigRequest.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.QueryFederationSyncConfigResponse.FromString,
                )
        self.IgnoreAssetOutPoint = channel.unary_unary(
                '/universerpc.Universe/IgnoreAssetOutPoint',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.IgnoreAssetOutPointRequest.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.IgnoreAssetOutPointResponse.FromString,
                )
        self.UpdateSupplyCommit = channel.unary_unary(
                '/universerpc.Universe/UpdateSupplyCommit',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.UpdateSupplyCommitRequest.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.UpdateSupplyCommitResponse.FromString,
                )
        self.FetchSupplyCommit = channel.unary_unary(
                '/universerpc.Universe/FetchSupplyCommit',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.FetchSupplyCommitRequest.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.FetchSupplyCommitResponse.FromString,
                )
        self.FetchSupplyLeaves = channel.unary_unary(
                '/universerpc.Universe/FetchSupplyLeaves',
                request_serializer=lndgrpc_dot_compiled_dot_universe__pb2.FetchSupplyLeavesRequest.SerializeToString,
                response_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.FetchSupplyLeavesResponse.FromString,
                )


class UniverseServicer(object):
    """Missing associated documentation comment in .proto file."""

    def MultiverseRoot(self, request, context):
        """tapcli: `universe multiverse`
        MultiverseRoot returns the root of the multiverse tree. This is useful to
        determine the equality of two multiverse trees, since the root can directly
        be compared to another multiverse root to find out if a sync is required.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssetRoots(self, request, context):
        """tapcli: `universe roots`
        AssetRoots queries for the known Universe roots associated with each known
        asset. These roots represent the supply/audit state for each known asset.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryAssetRoots(self, request, context):
        """tapcli: `universe roots`
        QueryAssetRoots attempts to locate the current Universe root for a specific
        asset. This asset can be identified by its asset ID or group key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAssetRoot(self, request, context):
        """tapcli: `universe delete`
        DeleteAssetRoot deletes the Universe root for a specific asset, including
        all asoociated universe keys, leaves, and events.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssetLeafKeys(self, request, context):
        """tapcli: `universe keys`
        AssetLeafKeys queries for the set of Universe keys associated with a given
        asset_id or group_key. Each key takes the form: (outpoint, script_key),
        where outpoint is an outpoint in the Bitcoin blockchain that anchors a
        valid Taproot Asset commitment, and script_key is the script_key of
        the asset within the Taproot Asset commitment for the given asset_id or
        group_key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssetLeaves(self, request, context):
        """tapcli: `universe leaves`
        AssetLeaves queries for the set of asset leaves (the values in the Universe
        MS-SMT tree) for a given asset_id or group_key. These represents either
        asset issuance events (they have a genesis witness) or asset transfers that
        took place on chain. The leaves contain a normal Taproot Asset proof, as
        well as details for the asset.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryProof(self, request, context):
        """tapcli: `universe proofs query`
        QueryProof attempts to query for an issuance or transfer proof for a given
        asset based on its UniverseKey. A UniverseKey is composed of the Universe
        ID (asset_id/group_key) and also a leaf key (outpoint || script_key). If
        found, then the issuance proof is returned that includes an inclusion proof
        to the known Universe root, as well as a Taproot Asset state transition or
        issuance proof for the said asset.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsertProof(self, request, context):
        """TODO(roasbeef): can make generic by being just AssetProof? ^
        * also want flag to give it in raw bytes so can sideload or import

        tapcli: `universe proofs insert`
        InsertProof attempts to insert a new issuance or transfer proof into the
        Universe tree specified by the UniverseKey. If valid, then the proof is
        inserted into the database, with a new Universe root returned for the
        updated asset_id/group_key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushProof(self, request, context):
        """tapcli: `universe proofs push`
        PushProof attempts to query the local universe for a proof specified by a
        UniverseKey. If found, a connection is made to a remote Universe server to
        attempt to upload the asset leaf.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Info(self, request, context):
        """TODO(roasbeef): rename resp to UniverseStateUpdate? ^

        tapcli: `universe info`
        Info returns a set of information about the current state of the Universe
        and allows a caller to check that a universe server is reachable and
        configured correctly to allow proof courier access without macaroons.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncUniverse(self, request, context):
        """tapcli: `universe sync`
        SyncUniverse takes host information for a remote Universe server, then
        attempts to synchronize either only the set of specified asset_ids, or all
        assets if none are specified. The sync process will attempt to query for
        the latest known root for each asset, performing tree based reconciliation
        to arrive at a new shared root.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFederationServers(self, request, context):
        """TODO(roasebeef): streaming response, so can give feedback? ^

        tapcli: `universe federation list`
        ListFederationServers lists the set of servers that make up the federation
        of the local Universe server. This servers are used to push out new proofs,
        and also periodically call sync new proofs from the remote server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddFederationServer(self, request, context):
        """tapcli: `universe federation add`
        AddFederationServer adds a new server to the federation of the local
        Universe server. Once a server is added, this call can also optionally be
        used to trigger a sync of the remote server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFederationServer(self, request, context):
        """tapcli: `universe federation del`
        DeleteFederationServer removes a server from the federation of the local
        Universe server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UniverseStats(self, request, context):
        """tapcli: `universe stats`
        UniverseStats returns a set of aggregate statistics for the current state
        of the Universe. Stats returned include: total number of syncs, total
        number of proofs, and total number of known assets.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryAssetStats(self, request, context):
        """tapcli `universe stats assets`
        QueryAssetStats returns a set of statistics for a given set of assets.
        Stats can be queried for all assets, or based on the: asset ID, name, or
        asset type. Pagination is supported via the offset and limit params.
        Results can also be sorted based on any of the main query params.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryEvents(self, request, context):
        """tapcli `universe stats events`
        QueryEvents returns the number of sync and proof events for a given time
        period, grouped by day.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetFederationSyncConfig(self, request, context):
        """
        SetFederationSyncConfig sets the configuration of the universe federation
        sync.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryFederationSyncConfig(self, request, context):
        """tapcli: `universe federation config info`
        QueryFederationSyncConfig queries the universe federation sync configuration
        settings.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IgnoreAssetOutPoint(self, request, context):
        """tapcli: `universe ignoreoutpoint`
        IgnoreAssetOutPoint allows an asset issuer to mark a specific asset outpoint
        as ignored. An ignored outpoint will be included in the next universe supply
        commitment transaction that is published.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSupplyCommit(self, request, context):
        """tapcli: `universe updatesupplycommit`
        UpdateSupplyCommit updates the on-chain supply commitment for a specific
        asset group.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchSupplyCommit(self, request, context):
        """tapcli: `universe fetchsupplycommit`
        FetchSupplyCommit fetches the on-chain supply commitment for a specific
        asset group.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchSupplyLeaves(self, request, context):
        """tapcli: `universe supplyleaves`
        FetchSupplyLeaves fetches the supply leaves for a specific asset group
        within a specified block height range. The leaves include issuance, burn,
        and ignore leaves, which represent the supply changes for the asset group.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UniverseServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'MultiverseRoot': grpc.unary_unary_rpc_method_handler(
                    servicer.MultiverseRoot,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.MultiverseRootRequest.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.MultiverseRootResponse.SerializeToString,
            ),
            'AssetRoots': grpc.unary_unary_rpc_method_handler(
                    servicer.AssetRoots,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.AssetRootRequest.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.AssetRootResponse.SerializeToString,
            ),
            'QueryAssetRoots': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryAssetRoots,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.AssetRootQuery.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.QueryRootResponse.SerializeToString,
            ),
            'DeleteAssetRoot': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAssetRoot,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.DeleteRootQuery.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.DeleteRootResponse.SerializeToString,
            ),
            'AssetLeafKeys': grpc.unary_unary_rpc_method_handler(
                    servicer.AssetLeafKeys,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.AssetLeafKeysRequest.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.AssetLeafKeyResponse.SerializeToString,
            ),
            'AssetLeaves': grpc.unary_unary_rpc_method_handler(
                    servicer.AssetLeaves,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.ID.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.AssetLeafResponse.SerializeToString,
            ),
            'QueryProof': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryProof,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.UniverseKey.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.AssetProofResponse.SerializeToString,
            ),
            'InsertProof': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertProof,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.AssetProof.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.AssetProofResponse.SerializeToString,
            ),
            'PushProof': grpc.unary_unary_rpc_method_handler(
                    servicer.PushProof,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.PushProofRequest.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.PushProofResponse.SerializeToString,
            ),
            'Info': grpc.unary_unary_rpc_method_handler(
                    servicer.Info,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.InfoRequest.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.InfoResponse.SerializeToString,
            ),
            'SyncUniverse': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncUniverse,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.SyncRequest.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.SyncResponse.SerializeToString,
            ),
            'ListFederationServers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFederationServers,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.ListFederationServersRequest.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.ListFederationServersResponse.SerializeToString,
            ),
            'AddFederationServer': grpc.unary_unary_rpc_method_handler(
                    servicer.AddFederationServer,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.AddFederationServerRequest.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.AddFederationServerResponse.SerializeToString,
            ),
            'DeleteFederationServer': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFederationServer,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.DeleteFederationServerRequest.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.DeleteFederationServerResponse.SerializeToString,
            ),
            'UniverseStats': grpc.unary_unary_rpc_method_handler(
                    servicer.UniverseStats,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.StatsRequest.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.StatsResponse.SerializeToString,
            ),
            'QueryAssetStats': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryAssetStats,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.AssetStatsQuery.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.UniverseAssetStats.SerializeToString,
            ),
            'QueryEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryEvents,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.QueryEventsRequest.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.QueryEventsResponse.SerializeToString,
            ),
            'SetFederationSyncConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.SetFederationSyncConfig,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.SetFederationSyncConfigRequest.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.SetFederationSyncConfigResponse.SerializeToString,
            ),
            'QueryFederationSyncConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryFederationSyncConfig,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.QueryFederationSyncConfigRequest.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.QueryFederationSyncConfigResponse.SerializeToString,
            ),
            'IgnoreAssetOutPoint': grpc.unary_unary_rpc_method_handler(
                    servicer.IgnoreAssetOutPoint,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.IgnoreAssetOutPointRequest.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.IgnoreAssetOutPointResponse.SerializeToString,
            ),
            'UpdateSupplyCommit': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSupplyCommit,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.UpdateSupplyCommitRequest.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.UpdateSupplyCommitResponse.SerializeToString,
            ),
            'FetchSupplyCommit': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchSupplyCommit,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.FetchSupplyCommitRequest.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.FetchSupplyCommitResponse.SerializeToString,
            ),
            'FetchSupplyLeaves': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchSupplyLeaves,
                    request_deserializer=lndgrpc_dot_compiled_dot_universe__pb2.FetchSupplyLeavesRequest.FromString,
                    response_serializer=lndgrpc_dot_compiled_dot_universe__pb2.FetchSupplyLeavesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'universerpc.Universe', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Universe(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def MultiverseRoot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/MultiverseRoot',
            lndgrpc_dot_compiled_dot_universe__pb2.MultiverseRootRequest.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.MultiverseRootResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssetRoots(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/AssetRoots',
            lndgrpc_dot_compiled_dot_universe__pb2.AssetRootRequest.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.AssetRootResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryAssetRoots(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/QueryAssetRoots',
            lndgrpc_dot_compiled_dot_universe__pb2.AssetRootQuery.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.QueryRootResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAssetRoot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/DeleteAssetRoot',
            lndgrpc_dot_compiled_dot_universe__pb2.DeleteRootQuery.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.DeleteRootResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssetLeafKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/AssetLeafKeys',
            lndgrpc_dot_compiled_dot_universe__pb2.AssetLeafKeysRequest.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.AssetLeafKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssetLeaves(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/AssetLeaves',
            lndgrpc_dot_compiled_dot_universe__pb2.ID.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.AssetLeafResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryProof(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/QueryProof',
            lndgrpc_dot_compiled_dot_universe__pb2.UniverseKey.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.AssetProofResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InsertProof(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/InsertProof',
            lndgrpc_dot_compiled_dot_universe__pb2.AssetProof.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.AssetProofResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushProof(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/PushProof',
            lndgrpc_dot_compiled_dot_universe__pb2.PushProofRequest.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.PushProofResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/Info',
            lndgrpc_dot_compiled_dot_universe__pb2.InfoRequest.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.InfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncUniverse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/SyncUniverse',
            lndgrpc_dot_compiled_dot_universe__pb2.SyncRequest.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.SyncResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListFederationServers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/ListFederationServers',
            lndgrpc_dot_compiled_dot_universe__pb2.ListFederationServersRequest.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.ListFederationServersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddFederationServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/AddFederationServer',
            lndgrpc_dot_compiled_dot_universe__pb2.AddFederationServerRequest.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.AddFederationServerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFederationServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/DeleteFederationServer',
            lndgrpc_dot_compiled_dot_universe__pb2.DeleteFederationServerRequest.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.DeleteFederationServerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UniverseStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/UniverseStats',
            lndgrpc_dot_compiled_dot_universe__pb2.StatsRequest.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.StatsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryAssetStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/QueryAssetStats',
            lndgrpc_dot_compiled_dot_universe__pb2.AssetStatsQuery.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.UniverseAssetStats.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/QueryEvents',
            lndgrpc_dot_compiled_dot_universe__pb2.QueryEventsRequest.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.QueryEventsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetFederationSyncConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/SetFederationSyncConfig',
            lndgrpc_dot_compiled_dot_universe__pb2.SetFederationSyncConfigRequest.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.SetFederationSyncConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryFederationSyncConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/QueryFederationSyncConfig',
            lndgrpc_dot_compiled_dot_universe__pb2.QueryFederationSyncConfigRequest.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.QueryFederationSyncConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IgnoreAssetOutPoint(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/IgnoreAssetOutPoint',
            lndgrpc_dot_compiled_dot_universe__pb2.IgnoreAssetOutPointRequest.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.IgnoreAssetOutPointResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSupplyCommit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/UpdateSupplyCommit',
            lndgrpc_dot_compiled_dot_universe__pb2.UpdateSupplyCommitRequest.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.UpdateSupplyCommitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchSupplyCommit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/FetchSupplyCommit',
            lndgrpc_dot_compiled_dot_universe__pb2.FetchSupplyCommitRequest.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.FetchSupplyCommitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchSupplyLeaves(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/universerpc.Universe/FetchSupplyLeaves',
            lndgrpc_dot_compiled_dot_universe__pb2.FetchSupplyLeavesRequest.SerializeToString,
            lndgrpc_dot_compiled_dot_universe__pb2.FetchSupplyLeavesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
